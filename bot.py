# bot.py
import os
from telegram import Update, ChatPermissions
from telegram.ext import Application, CommandHandler, ContextTypes

# –¢–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise RuntimeError(
        "‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN."
    )


# –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞–¥–º–∏–Ω –∏–ª–∏ –Ω–µ—Ç
async def is_admin(update: Update) -> bool:
    chat = update.effective_chat
    user = update.effective_user
    member = await chat.get_member(user.id)
    return member.status in ["administrator", "creator"]


# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–∫—Ä—ã—Ç—å —á–∞—Ç
async def close_chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not await is_admin(update):
        return await update.message.reply_text(
            "üö´ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
        )

    try:
        await update.effective_chat.set_permissions(
            ChatPermissions(can_send_messages=False)
        )
        await update.message.reply_text(
            f"üîí –ß–∞—Ç –∑–∞–∫—Ä—ã—Ç –∞–¥–º–∏–Ω–æ–º {update.effective_user.mention_html()}.",
            parse_mode="HTML",
        )
    except Exception as e:
        await update.message.reply_text(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞: —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞.\n{e}"
        )


# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
async def open_chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not await is_admin(update):
        return await update.message.reply_text(
            "üö´ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."
        )

    try:
        await update.effective_chat.set_permissions(
            ChatPermissions(can_send_messages=True)
        )
        await update.message.reply_text(
            f"üîì –ß–∞—Ç –æ—Ç–∫—Ä—ã—Ç –∞–¥–º–∏–Ω–æ–º {update.effective_user.mention_html()}.",
            parse_mode="HTML",
        )
    except Exception as e:
        await update.message.reply_text(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞: —É –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞.\n{e}"
        )


def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("close", close_chat))
    app.add_handler(CommandHandler("open", open_chat))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()  # <- –±–µ–∑ asyncio.run()


if __name__ == "__main__":
    main()
